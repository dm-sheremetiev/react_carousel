{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","offset","frameSize","props","infinite","handleNextClick","frameSpace","itemWidth","maxOffset","newOffset","step","setState","prev","handlePrevClick","prevProps","this","images","animationDuration","count","className","style","width","transform","transition","map","image","src","alt","type","onClick","React","Component","App","length","name","value","onChange","e","target","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.800e4388.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  offset: number;\n  frameSize: number;\n  infinite: boolean;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    offset: 0,\n    frameSize: this.props.frameSize,\n    infinite: this.props.infinite,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.frameSize !== prevProps.frameSize) {\n      this.setState({ frameSize: this.props.frameSize });\n    }\n\n    if (this.props.infinite !== prevProps.infinite) {\n      this.setState({ infinite: this.props.infinite });\n    }\n  }\n\n  handleNextClick = () => {\n    // I'm using here a lot of const cause it more easy than change them like class-prop\n    const frameSpace = this.state.frameSize * this.props.itemWidth;\n    const maxOffset = this.props.itemWidth * 10 - frameSpace;\n    const newOffset = this.props.itemWidth * this.props.step;\n\n    if (this.state.offset + newOffset > maxOffset) {\n      this.setState({ offset: maxOffset });\n    } else {\n      this.setState(prev => ({ offset: newOffset + prev.offset }));\n    }\n\n    if (this.state.offset === maxOffset && this.state.infinite) {\n      this.setState({ offset: 0 });\n    }\n  };\n\n  handlePrevClick = () => {\n    const frameSpace = this.state.frameSize * this.props.itemWidth;\n    const maxOffset = this.props.itemWidth * 10 - frameSpace;\n    const newOffset = this.props.itemWidth * this.props.step;\n\n    if (this.state.offset - newOffset <= 0) {\n      this.setState({ offset: 0 });\n    } else {\n      this.setState(prev => ({ offset: prev.offset - newOffset }));\n    }\n\n    if (this.state.offset === 0 && this.state.infinite) {\n      this.setState({ offset: maxOffset });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    const { offset } = this.state;\n    let count = 0;\n\n    return (\n      <>\n        <div className=\"wrapper\">\n          <div\n            className=\"Carousel\"\n            style={{ width: `${frameSize * itemWidth}px` }}\n          >\n            <ul\n              className=\"Carousel__list\"\n              style={\n                {\n                  transform: `translateX(-${offset}px)`,\n                  transition: `transform ${animationDuration / 1000}s`,\n                }\n              }\n            >\n              {images.map(image => {\n                count += 1;\n\n                return (\n                  <li className=\"Carousel__item\" key={image}>\n                    <img\n                      className=\"Carousel__image\"\n                      style={{ width: `${itemWidth}px` }}\n                      src={`${image}`}\n                      alt={`${count}`}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n\n        </div>\n        <div className=\"container\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.handlePrevClick}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.handleNextClick}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"inputs__wrapper\">\n          <label>\n            Item width:\n            <input\n              className=\"input\"\n              name=\"itemWidth\"\n              type=\"number\"\n              value={itemWidth}\n              onChange={(e) => {\n                this.setState({ itemWidth: +e.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Frame size:\n            <input\n              className=\"input\"\n              name=\"frameSize\"\n              type=\"number\"\n              max=\"10\"\n              value={frameSize}\n              onChange={(e) => {\n                this.setState({ frameSize: +e.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Step:\n            <input\n              className=\"input\"\n              name=\"step\"\n              type=\"number\"\n              max=\"9\"\n              value={step}\n              onChange={(e) => {\n                this.setState({ step: +e.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Animation duration:\n            <input\n              className=\"input\"\n              name=\"animationDuration\"\n              type=\"number\"\n              value={animationDuration}\n              onChange={(e) => {\n                this.setState({ animationDuration: +e.target.value });\n              }}\n            />\n          </label>\n          <label>\n            Infinite:\n            <input\n              className=\"checkbox\"\n              name=\"animationDuration\"\n              type=\"checkbox\"\n              onChange={() => {\n                this.setState(prev => ({ infinite: !prev.infinite }));\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}